% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/taperHaus.R
\name{taper_haus}
\alias{taper_haus}
\title{Tapering a Hausdorff spatial weight matrix}
\usage{
taper_haus(shp, k = NULL, f1, f2 = f1, inverse = FALSE,
  normalize = FALSE)
}
\arguments{
\item{shp}{a SpatialPolygons object.}

\item{k}{The number of nearest neighbors to retain. Defaults to NULL which will result in retaining all distances.}

\item{f1}{The percentage of region i to retain when calculating the directional Hausdorff distance from region i to region j.}

\item{f2}{The percentage of region j to retain when calculating the directional Hausdorff distance from region j to i. Defaults to the value of f1. Note that specifying a different value will result in a non-symmetric matrix.}

\item{inverse}{Defaults to FALSE and returns requested distances directly. TRUE will return 1/distance.}

\item{normalize}{Should the rows be normalized to sum to 1? Defaults to FALSE.}
}
\value{
an nxn matrix of requested distances or inverse.
}
\description{
This function takes a SpatialPolygons object
}
